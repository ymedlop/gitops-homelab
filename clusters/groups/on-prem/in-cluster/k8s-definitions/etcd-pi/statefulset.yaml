apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  serviceName: etcd
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
      annotations:
        serviceName: etcd
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - etcd
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.21
        imagePullPolicy: IfNotPresent
        ports:
        - name: etcd-client
          containerPort: 2379
        - name: etcd-server
          containerPort: 2380
        - name: etcd-metrics
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/data
        - --wal-dir=/data/wal
        - --name=$(POD_NAME)
        - --initial-advertise-peer-urls=https://$(POD_NAME).etcd.kube-system.svc.cluster.local:2380
        - --listen-peer-urls=https://0.0.0.0:2380
        - --listen-client-urls=https://0.0.0.0:2379
        - --advertise-client-urls=https://$(POD_NAME).etcd.kube-system.svc.cluster.local:2379
        - --initial-cluster=etcd-0=https://etcd-0.etcd.kube-system.svc.cluster.local:2380,etcd-1=https://etcd-1.etcd.kube-system.svc.cluster.local:2380,etcd-2=https://etcd-2.etcd.kube-system.svc.cluster.local:2380
        - --initial-cluster-state=new
        - --initial-cluster-token=etcd-cluster
        - --client-cert-auth=true
        - --trusted-ca-file=/etc/etcd/certs/ca.crt
        - --cert-file=/etc/etcd/certs/server.crt
        - --key-file=/etc/etcd/certs/server.key
        - --peer-client-cert-auth=true
        - --peer-trusted-ca-file=/etc/etcd/certs/ca.crt
        - --peer-cert-file=/etc/etcd/certs/peer.crt
        - --peer-key-file=/etc/etcd/certs/peer.key
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: etcd-data
          mountPath: /data
        - name: etcd-client-tls
          mountPath: "/etc/etcd/certs/client"
          readOnly: true
        - name: etcd-server-tls
          mountPath: "/etc/etcd/certs/server"
          readOnly: true
      volumes:
      - name: etcd-client-tls
        secret:
          secretName: etcd-client-tls
          optional: false
      - name: etcd-server-tls
        secret:
          secretName: etcd-server-tls
          optional: false
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi